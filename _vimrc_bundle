
filetype plugin indent off
if has('vim_starting')
  let bundle_dir = '~/dotfiles/bundle'
  if !isdirectory(bundle_dir.'/neobundle.vim')
    call system( 'git clone https://github.com/Shougo/neobundle.vim.git '.bundle_dir.'/neobundle.vim')
  endif

  exe 'set runtimepath+='.bundle_dir.'/neobundle.vim'
  call neobundle#rc(bundle_dir)
endif

NeoBundle 'https://github.com/vim-scripts/AnsiEsc.vim.git'
NeoBundle 'https://github.com/bling/vim-airline.git'
NeoBundle 'https://github.com/kana/vim-smartinput.git'
NeoBundle 'https://github.com/ervandew/supertab.git'
NeoBundle 'https://github.com/thinca/vim-quickrun.git'
NeoBundle 'https://github.com/osyo-manga/vim-over.git'
NeoBundle 'https://github.com/scrooloose/syntastic.git'
NeoBundle 'https://github.com/vim-scripts/YankRing.vim.git'
NeoBundle 'https://github.com/kien/ctrlp.vim.git'
NeoBundle 'https://github.com/scrooloose/nerdcommenter.git'
NeoBundle 'https://github.com/mattn/emmet-vim.git'
NeoBundle 'https://github.com/matze/vim-move.git'
NeoBundle 'https://github.com/mbbill/undotree.git'
NeoBundle 'https://github.com/rking/ag.vim.git'
NeoBundle 'https://github.com/tpope/vim-fugitive.git'
NeoBundle 'https://github.com/tpope/vim-endwise.git'
NeoBundle 'https://github.com/vim-ruby/vim-ruby.git'
NeoBundle 'https://github.com/tpope/vim-rails.git'
NeoBundle 'https://github.com/tpope/vim-surround.git'
NeoBundle 'https://github.com/Shougo/vimshell.vim.git'
NeoBundle 'https://github.com/Shougo/vimproc.vim.git', {
      \ 'build' : {
      \     'windows' : 'make -f make_mingw32.mak',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }
NeoBundle 'https://github.com/scrooloose/nerdtree.git'
  nmap <silent> <C-e>      :NERDTreeToggle<CR>
    vmap <silent> <C-e> <Esc>:NERDTreeToggle<CR>
    omap <silent> <C-e>      :NERDTreeToggle<CR>
    imap <silent> <C-e> <Esc>:NERDTreeToggle<CR>
    cmap <silent> <C-e> <C-u>:NERDTreeToggle<CR>
    autocmd vimenter * if !argc() | NERDTree | endif
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
    let g:NERDTreeIgnore=['\.clean$', '\.swp$', '\.bak$', '\~$']
    let g:NERDTreeShowHidden=1
    let g:NERDTreeMinimalUI=1
    let g:NERDTreeDirArrows=0
    let g:NERDTreeMouseMode=2

if neobundle#exists_not_installed_bundles()
echomsg 'Not installed bundles : ' .
\ string(neobundle#get_not_installed_bundle_names())
echomsg 'Install Plugins'
NeoBundleInstall
endif

filetype plugin indent on
